// Code generated by MockGen. DO NOT EDIT.
// Source: discordplayer/interfaces/discordguildinterface.go
//
// Generated by this command:
//
//	mockgen -source=discordplayer/interfaces/discordguildinterface.go -destination discordplayer/mocks/discordguildinterface_mock.go \
//

// Package mock_discordinterface is a generated GoMock package.
package mock_discordinterface

import (
	reflect "reflect"

	discordinterface "github.com/fakelag/streaming-music-bot/discordplayer/interfaces"
	gomock "go.uber.org/mock/gomock"
)

// MockDiscordGuild is a mock of DiscordGuild interface.
type MockDiscordGuild struct {
	ctrl     *gomock.Controller
	recorder *MockDiscordGuildMockRecorder
}

// MockDiscordGuildMockRecorder is the mock recorder for MockDiscordGuild.
type MockDiscordGuildMockRecorder struct {
	mock *MockDiscordGuild
}

// NewMockDiscordGuild creates a new mock instance.
func NewMockDiscordGuild(ctrl *gomock.Controller) *MockDiscordGuild {
	mock := &MockDiscordGuild{ctrl: ctrl}
	mock.recorder = &MockDiscordGuildMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDiscordGuild) EXPECT() *MockDiscordGuildMockRecorder {
	return m.recorder
}

// GetVoiceStates mocks base method.
func (m *MockDiscordGuild) GetVoiceStates() []discordinterface.DiscordVoiceState {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVoiceStates")
	ret0, _ := ret[0].([]discordinterface.DiscordVoiceState)
	return ret0
}

// GetVoiceStates indicates an expected call of GetVoiceStates.
func (mr *MockDiscordGuildMockRecorder) GetVoiceStates() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVoiceStates", reflect.TypeOf((*MockDiscordGuild)(nil).GetVoiceStates))
}

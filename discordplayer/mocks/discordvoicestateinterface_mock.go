// Code generated by MockGen. DO NOT EDIT.
// Source: discordplayer/interfaces/discordvoicestateinterface.go
//
// Generated by this command:
//
//	mockgen -source=discordplayer/interfaces/discordvoicestateinterface.go -destination discordplayer/mocks/discordvoicestateinterface_mock.go
//

// Package mock_discordinterface is a generated GoMock package.
package mock_discordinterface

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockDiscordVoiceState is a mock of DiscordVoiceState interface.
type MockDiscordVoiceState struct {
	ctrl     *gomock.Controller
	recorder *MockDiscordVoiceStateMockRecorder
}

// MockDiscordVoiceStateMockRecorder is the mock recorder for MockDiscordVoiceState.
type MockDiscordVoiceStateMockRecorder struct {
	mock *MockDiscordVoiceState
}

// NewMockDiscordVoiceState creates a new mock instance.
func NewMockDiscordVoiceState(ctrl *gomock.Controller) *MockDiscordVoiceState {
	mock := &MockDiscordVoiceState{ctrl: ctrl}
	mock.recorder = &MockDiscordVoiceStateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDiscordVoiceState) EXPECT() *MockDiscordVoiceStateMockRecorder {
	return m.recorder
}

// GetChannelID mocks base method.
func (m *MockDiscordVoiceState) GetChannelID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChannelID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetChannelID indicates an expected call of GetChannelID.
func (mr *MockDiscordVoiceStateMockRecorder) GetChannelID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChannelID", reflect.TypeOf((*MockDiscordVoiceState)(nil).GetChannelID))
}

// GetUserID mocks base method.
func (m *MockDiscordVoiceState) GetUserID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUserID indicates an expected call of GetUserID.
func (mr *MockDiscordVoiceStateMockRecorder) GetUserID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserID", reflect.TypeOf((*MockDiscordVoiceState)(nil).GetUserID))
}
